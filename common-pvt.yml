#######################################
#    Tools Driver Config for MCI      #
#######################################
# default command type
command_type: system

# run the same task in the previous revision if the current task fails
stepback: true

mongo_tools_variables:

  mongo_tools_task_lists:

    atlas_live_test_task_list: &atlas_live_tasks
      - dist
      - test_atlas_free
      - test_atlas_replica
      - test_atlas_sharded
      - test_atlas_tls11
      - test_atlas_tls12

functions:

  "build tool":
    command: shell.exec
    type: test
    params:
      working_dir: src/github.com/mongodb/mongo-tools
      script: |
        set -x
        set -v
        set -e
        echo "Building ${tool}..."
        if [ "Windows_NT" = "$OS" ]; then
            set -o igncr
        fi;
        # In RHEL 5.5, /usr/bin/ld can't handle --build-id parameters, so
        # use a wrapper if it's present on the system
        #
        if [ -d /opt/ldwrapper/bin ]
        then
          export PATH=/opt/ldwrapper/bin:$PATH
        fi

        . ./set_goenv.sh
        GOROOT="" set_goenv || exit
        go version
        env | grep ^GO
        go build -ldflags "$(print_ldflags)" ${args} -tags "$(print_tags failpoints ${build_tags})" -o bin/${tool} ${tool}/main/${tool}.go
        ./bin/${tool} --version

  "fetch tool" :
    command: s3.get
    params:
      bucket: mciuploads
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: src/github.com/mongodb/mongo-tools/bin/${tool}${extension}
      remote_file: mongo-tools/binaries/${build_id}/${edition|community}/${tool}${extension}

  "upload tool":
    command: s3.put
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_file: src/github.com/mongodb/mongo-tools/bin/${tool}
      remote_file: mongo-tools/binaries/${build_id}/${edition|community}/${tool}${extension}
      bucket: mciuploads
      permissions: public-read
      content_type: application/octet-stream
      display_name: ${tool}

  "fetch source" :
    - command: shell.exec
      params:
        script: |
          set -x
          set -v
          set -e
          mkdir -p src/github.com/mongodb
    - command: git.get_project
      params:
        directory: src/github.com/mongodb/mongo-tools
    - command: git.apply_patch
      params:
        directory: src/github.com/mongodb/mongo-tools
    - command: shell.exec
      params:
        working_dir: src/github.com/mongodb/mongo-tools
        script: |
          set -x
          set -v
          set -e
          mkdir -p bin

  "test_atlas_dump" :
    - command: shell.exec
      type: test
      params:
        working_dir: src/github.com/mongodb/mongo-tools
        script: |
          set -x
          set -v
          set -e
          chmod +x ./bin/mongodump
          ./bin/mongodump --uri="${uri}" -v

timeout:
  - command: shell.exec
    params:
      silent: true
      script: |
        set -x
          set -v
        # don't attempt to abort on any distro which has a special way of
        # killing everything (i.e. using taskkill on Windows)
        if [ "${killall_mci}" = "" ]; then
          all_tools="bsondump mongodump mongoexport mongofiles mongoimport mongorestore mongostat mongotop"
          # send SIGABRT to print a stacktrace for any hung tool
          pkill -ABRT "^($(echo -n $all_tools | tr ' ' '|'))\$"
          # git the processes a second or two to dump their stacks
          sleep 10
        fi

tasks:

  - name: dist
    depends_on:
    commands:
      - func: "fetch source"
      # mongodump
      - func: "build tool"
        vars:
          tool: mongodump
      - func: "upload tool"
        vars:
          tool: mongodump

  - name: test_atlas_free
    commands:
      - func: "fetch tool"
        vars:
          tool: mongodump
      - func: test_atlas_dump
        vars:
          uri: '${atlas_free}'
    depends_on:
      - name: dist
  - name: test_atlas_replica
    commands:
      - func: "fetch tool"
        vars:
          tool: mongodump
      - func: test_atlas_dump
        vars:
          uri: '${atlas_replica}'
    depends_on:
      - name: dist
  - name: test_atlas_sharded
    commands:
      - func: "fetch tool"
        vars:
          tool: mongodump
      - func: test_atlas_dump
        vars:
          uri: '${atlas_sharded}'
    depends_on:
      - name: dist
  - name: test_atlas_tls11
    commands:
      - func: "fetch tool"
        vars:
          tool: mongodump
      - func: test_atlas_dump
        vars:
          uri: '${atlas_tls11}'
    depends_on:
      - name: dist
  - name: test_atlas_tls12
    commands:
      - func: "fetch tool"
        vars:
          tool: mongodump
      - func: test_atlas_dump
        vars:
          uri: '${atlas_tls12}'
    depends_on:
      - name: dist

buildvariants:

#######################################
#     Amazon x86_64 Buildvariants     #
#######################################

- name: amazonlinux64-enterprise
  display_name: Amazon Linux 64 Enterprise
  run_on:
  - amazon1-2018-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: amazon2-enterprise
  display_name: Amazon Linux 64 v2 Enterprise
  run_on:
  - amazon2-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

#######################################
#     Debian x86_64 Buildvariants     #
#######################################

- name: debian81-enterprise
  display_name: Debian 8.1 Enterprise
  run_on:
  - debian81-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: debian92-enterprise
  display_name: Debian 9.2 Enterprise
  run_on:
  - debian92-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

#######################################
#           macOS Buildvariant        #
#######################################

- name: macOS-1014-ssl
  display_name: MacOS 10.14 SSL
  run_on:
  - macos-1014
  expansions:
    build_tags: "ssl"
  tasks: *atlas_live_tasks

#######################################
#     RHEL x86_64 Buildvariants       #
#######################################

- name: rhel62-enterprise
  display_name: RHEL 6.2 Enterprise
  run_on:
  - rhel62-small
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: rhel70-enterprise
  display_name: RHEL 7.0 Enterprise
  run_on:
  - rhel70-small
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

#######################################
#     SUSE x86_64 Buildvariants       #
#######################################

- name: suse12-enterprise
  display_name: SUSE 12 Enterprise
  run_on:
  - suse12-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

#######################################
#    Ubuntu x86_64 Buildvariants      #
#######################################

- name: ubuntu1404-enterprise
  display_name: Ubuntu 14.04 Enterprise
  run_on:
  - ubuntu1404-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: ubuntu1604-enterprise
  display_name: Ubuntu 16.04 Enterprise
  run_on:
  - ubuntu1604-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: ubuntu1804-enterprise
  display_name: Ubuntu 18.04 Enterprise
  run_on:
  - ubuntu1804-test
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

#######################################
#        Windows Buildvariants        #
#######################################

- name: windows-64-ssl
  display_name: Windows 64-bit SSL
  run_on:
  - windows-64-vs2017-test
  expansions:
    build_tags: "ssl"
  tasks: *atlas_live_tasks

#######################################
#        ARM Buildvariants            #
#######################################

- name: ubuntu1604-arm64-ssl
  display_name: ZAP ARM64 Ubuntu 16.04 SSL
  run_on:
  - ubuntu1604-arm64-small
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: "ssl"
  tasks: *atlas_live_tasks

- name: ubuntu1804-arm64-ssl
  display_name: ZAP ARM64 Ubuntu 18.04 SSL
  run_on:
  - ubuntu1804-arm64-small
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: "ssl"
  tasks: *atlas_live_tasks

#######################################
#        Power Buildvariants          #
#######################################

- name: rhel71-ppc64le-enterprise
  display_name: ZAP PPC64LE RHEL 7.1 Enterprise
  run_on:
  - rhel71-power8-test
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: 'ssl sasl gssapi'
  tasks: *atlas_live_tasks

- name: ubuntu1604-ppc64le-enterprise
  display_name: ZAP PPC64LE Ubuntu 16.04 Enterprise
  run_on:
  - ubuntu1604-power8-test
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: 'ssl sasl gssapi'
  tasks: *atlas_live_tasks

- name: ubuntu1804-ppc64le-enterprise
  display_name: ZAP PPC64LE Ubuntu 18.04 Enterprise
  run_on:
  - ubuntu1804-power8-test
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: 'ssl sasl gssapi'
  tasks: *atlas_live_tasks

#######################################
#     Z (s390x) Buildvariants         #
#######################################

- name: rhel67-s390x-enterprise
  display_name: ZAP s390x RHEL 6.7 Enterprise
  run_on:
  - rhel67-zseries-test
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: rhel72-s390x-enterprise
  display_name: ZAP s390x RHEL 7.2 Enterprise
  run_on:
  - rhel72-zseries-test
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks

- name: ubuntu1604-s390x-enterprise
  display_name: ZAP s390x Ubuntu 16.04 Enterprise
  run_on:
  - ubuntu1604-zseries-small
  stepback: false
  batchtime: 10080 # weekly
  expansions:
    build_tags: "sasl gssapi ssl"
  tasks: *atlas_live_tasks
